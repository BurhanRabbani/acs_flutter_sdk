# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter CI (Android & iOS)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: flutter-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: macos-latest   # macOS needed for iOS builds

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # JDK for Gradle/Android builds
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Install Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"   # use your local version
          channel: "stable"

      # Cache dependencies
      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      # Install project dependencies
      - name: Flutter Pub Get
        run: flutter pub get

      # Static analysis
      - name: Flutter Analyze
        run: flutter analyze --fatal-infos

      # Run unit/widget tests
      - name: Flutter Test
        run: flutter test

      # ---- Android Build (APK + AAB) ----
      - name: Build Android APK (release)
        run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Build Android App Bundle (AAB)
        run: flutter build appbundle --release

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab

      # ---- iOS Build (no signing, for CI) ----
      - name: Build iOS (release)
        run: flutter build ios --release --no-codesign

      - name: Upload iOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-build
          path: build/ios/iphoneos
          
      # ---- Debug Info ----
      - name: Versions
        if: ${{ always() }}
        run: |
          flutter --version
          dart --version
          java -versioneed to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test
